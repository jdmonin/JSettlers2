# JSettlers i18n localization strings: At Client.
#  This file is part of Java Settlers - An online multiplayer version of the game Settlers of Catan
#
# This file Copyright (C) 2013 Luis A. Ramirez <lartkma@gmail.com>
# Portions of this file Copyright (C) 2013-2023 Jeremy D Monin <jeremy@nand.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/ .


# - To run the client with a locale different from the client OS, use this jvm parameter: -Djsettlers.locale=es_MX
# - See ../server/toClient.properties for important reminders about .properties filenames and format.

resources.clay = Clay
resources.ore = Ore
resources.sheep = Sheep
resources.wheat = Wheat
resources.wood = Wood

# spec.* is for SOCStringManager.getSpecial; this section must be identical in the client and server string properties files

# spec.rsrcs.* is for {#,rsrcs}
spec.rsrcs.aclay = a clay
spec.rsrcs.aore = an ore
spec.rsrcs.asheep = a sheep
spec.rsrcs.awheat = a wheat
spec.rsrcs.awood = a wood
spec.rsrcs.aunknown = a resource of unknown type {0}
spec.rsrcs.1clay = 1 clay
spec.rsrcs.1ore = 1 ore
spec.rsrcs.1sheep = 1 sheep
spec.rsrcs.1wheat = 1 wheat
spec.rsrcs.1wood = 1 wood
spec.rsrcs.1unknown = 1 resource of unknown type {0}
spec.rsrcs.nclay = {0,number} clay
spec.rsrcs.nore = {0,number} ore
spec.rsrcs.nsheep = {0,number} sheep
spec.rsrcs.nwheat = {0,number} wheat
spec.rsrcs.nwood = {0,number} wood
spec.rsrcs.nunknown = {0,number} resources of unknown type {1}
spec.rsrcs.none = nothing
# For plural forms: Joe monopolized clay / monopolizó la madera
spec.rsrcs.clay = clay
spec.rsrcs.ore = ore
spec.rsrcs.sheep = sheep
spec.rsrcs.wheat = wheat
spec.rsrcs.wood = wood
spec.rsrcs.unknown = resources of unknown type {0}

# spec.dcards.* is for {#,dcards}
#   These are used in SOCDevCard.getCardTypeName, and its server callers messageToGameKeyedSpecial and messageToPlayerKeyedSpecial
spec.dcards.unknown = unknown card
spec.dcards.capgovhouse = Gov. House (1VP)
spec.dcards.discoveryplenty = Year of Plenty
spec.dcards.knightsoldier = Soldier
spec.dcards.knightsoldier.warship = Warship
spec.dcards.market = Market (1VP)
spec.dcards.monopoly = Monopoly
spec.dcards.roadbuilding = Road Building
spec.dcards.temple = Temple (1VP)
spec.dcards.towerchapel = Chapel (1VP)
spec.dcards.university = University (1VP)
spec.dcards.aunknown = an unknown card
spec.dcards.acapgovhouse = a Gov.House (+1VP)
spec.dcards.adiscoveryplenty = a Year of Plenty
spec.dcards.aknightsoldier = a Soldier
spec.dcards.aknightsoldier.warship = a Warship
spec.dcards.amarket = a Market (+1VP)
spec.dcards.amonopoly = a Monopoly
spec.dcards.aroadbuilding = a Road Building
spec.dcards.atemple = a Temple (+1VP)
spec.dcards.atowerchapel = a Chapel (+1VP)
spec.dcards.auniversity = a University (+1VP)

# i18n.duration.* for I18n.durationToDaysHoursMinutesSeconds; this section must be identical in the client and server string properties files
i18n.duration.days_hours_min_sec = {0,number} {0,choice,1#day|1<days} {1,number}:{2,number,00}:{3,number,00}
i18n.duration.hours_min_sec = {0,number}:{1,number,00}:{2,number,00}

# i18n.listitems.* for I18n.listItems; this section must be identical in the client and server string properties files
# i18n.listitems.item should have a trailing space to make room before the next item, if the language uses spaces
i18n.listitems.2 = {0} and {1}
i18n.listitems.item = {0}, 
i18n.listitems.finalitem = and {0}
i18n.listitems.nothing = nothing

abbr.no=N
abbr.yes=Y
base.build=Build
base.cancel=Cancel
base.change=Change
base.clear=Clear
base.close=Close
base.emptylist.nothing = nothing
base.none=None
base.none.parens=(none)
base.no.thanks=No thanks
base.no.thanks.sentenc=No thanks.
base.ok=OK
base.player_n=Player {0,number}
base.please.wait=Please wait...
base.reply.not.your.turn = It's not your turn.
base.restart=Restart
base.send=Send

# SOCConnectOrPracticePanel; some fields/buttons also used in SOCAccountClient
pcli.cpp.connect = Connect
pcli.cpp.connecttoaserv = Connect to a Server
pcli.cpp.connecttoserv = Connect to Server
pcli.cpp.jsettlers.versionbuild = JSettlers {0} build {1}
pcli.cpp.nickname = Nickname
pcli.cpp.password = Password
pcli.cpp.port = Port
pcli.cpp.server = Server
pcli.cpp.start = Start
pcli.cpp.startserv = Start a Server
pcli.cpp.welcomeheading = Welcome to JSettlers!  Please choose an option.

# SOCPlayerClient window
pcli.gamelist.cannot_join.parens = (cannot join)
pcli.gamelist.client_feats.cannot_create = Cannot create game {0}\nThis client does not have required feature(s): {1}
pcli.gamelist.client_feats.cannot_join = Cannot join game {0}\nThis client does not have required feature(s): {1}
pcli.main.game.info = Game Info
pcli.main.join.cannot = Cannot join, this client is incompatible with features of this game.
pcli.main.join.channel = Join Channel
pcli.main.join.game = Join Game
pcli.main.join.neednickname = First enter a nickname, then join a game or channel.
pcli.main.join.neednickname.g = First enter a nickname, then join a game.
pcli.main.join.neednickname.2 = You must enter a nickname before you can join a game or channel.
pcli.main.join.neednickname.g2 = You must enter a nickname before you can join a game.
pcli.main.label.channels = Channels
pcli.main.label.games = Games
pcli.main.label.newchannel = New Channel:
pcli.main.label.optionalpw = Optional Password:
pcli.main.label.yournickname = Your Nickname:
pcli.main.newgame = New Game...
# Just "Practice", because "Practice Game" text is too wide for button; also used by SOCConnectOrPracticePanel
pcli.main.practice = Practice
pcli.main.title = JSettlers client {0}
pcli.main.title.localserver = JSettlers server {0} - port {1}
# very short abbreviation to show version
pcli.main.version = v {0}
pcli.main.version.tip = Server version is {0} build {1}; client is {2} bld {3}

# PCli.startLocalTCPServer. Note that for TCP port#s we avoid {0,number}
# and use Integer.toString() so the port number won't be formatted as "8,880".
pcli.localserver.dialog = Other players connecting to your server\nneed only your IP address and port number.\nNo other server software install is needed.\nMake sure your firewall allows inbound traffic on port {0}.
pcli.localserver.port = Port: {0}
pcli.localserver.running = Server is Running. (Click for info)
pcli.localserver.running.tip = You are running a server on TCP port {0}. Version {1} bld {2}

# SOCPlayerClient misc error messages:
# Some error messages are also used by SOCAccountClient
pcli.error.clientshutdown = Sorry, the client has been shut down.
pcli.error.couldnotconnect = Could not connect to the server: {0}
pcli.error.kicked.samename = Kicked by player with same name.
pcli.error.loadpageagain = Load the page again.
pcli.error.networktrouble = Sorry, network trouble has occurred.
# will be followed by \n and text from server's SOCRejectConnection message
pcli.error.server.disconnected_by_version = Disconnected by server (version {0}):
pcli.error.server.unavailable = The server is unavailable. You can still play practice games.
pcli.error.startingpractice = Problem starting practice server:
pcli.error.startingserv = Problem starting server:

# SOCPlayerClient's Message Pane items and other messages:
# Some messages are also used by SOCAccountClient
pcli.message.append.debugon = , debug is on
pcli.message.connecting.serv = Connecting to server...
pcli.message.practicebutton = Practice Game (against robots)
pcli.message.startingpractice = Starting practice game setup...
pcli.message.talkingtoserv = Talking to server...

# Common Status message text (SOCStatusMessage):
# netmsg.status.common.* are used at server and client, text must be identical at both.
# SV_NEWGAME_ALREADY_EXISTS
netmsg.status.common.newgame_already_exists = A game with this name already exists, please choose a different name.
# SV_NEWGAME_NAME_REJECTED
netmsg.status.common.newgame_name_rejected = This name is not permitted, please choose a different name.
netmsg.status.common.newgame_name_rejected_digits_or_punct = A name with only digits or punctuation is not permitted, please add a letter.
# SV_NAME_TOO_LONG
netmsg.status.common.name_too_long = Please choose a shorter name; maximum length: {0}
# Client-only name check, not also at server:
netmsg.status.client.newgame_name_rejected_char = Name must not contain "{0}", please choose a different name.

#{0}: channel name
channel.channel=Channel: {0}
channel.joined={0} has joined this channel.
channel.left={0} left.

facechooser.prompt=Choose your face icon.
#{0}:game name, {1}:nickname
facechooser.title=Choose Face Icon: {0} [{1}]

default.name.practice.game=Practice
default.name.practice.player=Player

# Game Options and NewGameOptionsFrame
game.options.bot.auto_reject=Auto-reject bot trades after # seconds
game.options.none=This game does not use options.
game.options.not=This server version does not support game options.
game.options.ui.remember_face_icon=Remember face icon
game.options.ui.scale.force=Force UI scale to # (change might require restart)
#{0}:game name
game.options.title=Game info and options: {0}
game.options.title.new=New Game options
game.options.title.newpractice=New Game options: Practice game
game.options.name=Game name
# game info/status:
game.options.must_enter_nickname_to_check=Must enter a nickname to check status
game.options.not_started_yet=Not started yet
game.options.in_progress_created_minutes=In progress; created {0,choice, 1#1 minute|1<{0,number} minutes} ago
game.options.in_progress_joined_minutes=In progress; joined {0,choice, 1#1 minute|1<{0,number} minutes} ago
game.options.finished=Finished
game.options.finished_minutes=Finished after playing {0,choice, 1#1 minute|1<{0,number} minutes}
# messages and prompts:
game.options.nickerror=Please go back and enter a valid nickname for your user.
game.options.oknew=Create Game
game.options.prompt=Choose options for the new game.
game.options.singleline=Please use only a single line of text here.
#{0}: min integer value, {1}: max integer value
game.options.outofrange=Out of range: Should be {0,number,integer} to {1,number,integer}
game.options.onlydigits=Please use only digits here.
game.options.verconfirm.title=Confirm options minimum version
#{0}: version number, {1}: list of already-localized "version: gameopt" pairs (1 per line)
game.options.verconfirm.prompt=JSettlers {0} or newer is required for these game options.\nOlder clients won''t be able to join.\n\nVersion: Option:\n{1}
game.options.verconfirm.create=Create with these options
game.options.verconfirm.change=Change options
game.options.hex.classic.all=Hex graphics: Use Classic theme (All games)
# game.options.scenario.* are for NewGameOptionsFrame.showScenarioInfoDialog
game.options.scenario.info_btn=Scenario Info...
game.options.scenario.label=Game Scenario:
# Prefix used in all scenario game option names (SOCGameOption, toClient.properties)
game.options.scenario.optprefix=Scenarios:
game.options.scenario.vp=Victory Points to win:
game.options.sound.all=Sound effects (All games)
game.options.sound.mute_this=Sound: Mute this game

# SOCAccountClient:
# Also uses some messages from pcli.message.*, pcli.error.*, netmsg.status.common.*
account.connect.canceled = Connection canceled.
account.create.email = Email (optional):
account.create.msg.creating = Creating account...
account.create.msg.passwords_dont_match = The passwords don't match.
account.create.nickname.its = Nickname:
account.create.nickname.its.tip = This will be the new account's username.
account.create.nickname.your = Your Nickname:
account.create.nickname.your.tip = This will be your username.
account.create.password = Password:
account.create.password.again = Password (again):
account.create.prompt.enter_its_info = To create an account, please enter its information.
account.create.prompt.enter_your_info = To create an account, please enter your information.
account.msg.applet_destroyed = The applet has been destroyed. {0}
account.msg.refresh = Refresh the page to connect again.
account.must_enter_nick = You must enter a nickname.
account.must_enter_pw = You must enter a password.
account.okcreate = Create Account
account.server_version_minimum = This server has old version {0}; this client works only with {1} and newer servers.
# account.common.* are error messages at the client or server,
# and should have the same text in client and server properties files.
account.common.must_auth = You must log in with a username and password before you can create accounts.
account.common.no_accts = This server does not use accounts and passwords.
account.common.password_too_long = That password is too long.

# SOCHandPanel labels and tooltips
hpan.amounthand=Amount in hand
hpan.discarding=Discarding...
hpan.done=Done
hpan.picking.rsrcs=Picking\nResources...
hpan.pieces.available=Pieces available to place
hpan.points=Points:
hpan.points.closetowin=Close to winning
hpan.points.total.opponent=Total victory points for this opponent
hpan.points.total.yours=Your victory point total
# SVP = special victory points
hpan.svp=SVP:
hpan.svp.total = Total Special Victory Points: {0,number}
hpan.svp.tt=Special Victory Points, click for details
hpan.roads=Roads:
hpan.roads.almostout=Almost out of roads to place
hpan.roads.out=No more roads available
hpan.stlmts=Stlmts:
hpan.stlmts.almostout=Almost out of settlements to place
hpan.stlmts.out=No more settlements available
hpan.cities=Cities:
hpan.cities.almostout=Almost out of cities to place
hpan.cities.out=No more cities available
hpan.ships=Ships:
hpan.ships.almostout=Almost out of ships to place
hpan.ships.out=No more ships available
hpan.cloth=Cloth:
hpan.cloth.amounttraded=Amount of cloth traded from villages
hpan.soldiers=Soldiers:
hpan.soldiers.sizearmy=Size of this army
hpan.soldiers.sizeoppoarmy=Size of this opponent''s army
hpan.soldiers.sizeyourarmy=Size of your army
hpan.rsrc=Resources:
hpan.rsrc.total=Total:
hpan.rsrc.roll7discard=If 7 is rolled, would discard half these resources
hpan.trade.rightclick=Right-click to trade {0} with the bank
hpan.undos=Undos:
hpan.undos.tt=Number of remaining undos
hpan.wonderlevel=Wonder Level: {0,number}
# tip's {2} is game.specitem.sc_wond.of_*: "of the Monument" etc
hpan.wonderlevel.tip=Built {0,number} of {1,number} levels {2}
hpan.devcards=Dev. Cards:
hpan.devcards.clickfirst=Please click a card first to select it.
hpan.devcards.interror.ctype=Internal error: Unknown card type {0,number}: {1}
hpan.devcards.oneperturn=You may play only one card per turn.
hpan.devcards.play=Play Card
# NEW prefix, with trailing space
hpan.devcards.prefix.new=*NEW* 
hpan.devcards.roads.none=You have no roads left to place.
hpan.devcards.roads_ships.none=You have no roads or ships left to place.
hpan.devcards.vp.secretlyplayed=You secretly played this VP card when you bought it.
hpan.devcards.wait=Wait a turn before playing new cards.
hpan.devcards.warship.cannotnow=You cannot convert a ship to a warship right now.
hpan.item.play.cannot=Cannot play this item right now.
# Abbreviations for labels for Largest Army, Longest Road, etc
hpan.L.army = L. Army
hpan.L.army.tip = Largest Army
hpan.L.road = L. Road
hpan.L.road.tip = Longest Road
hpan.L.route = L. Route
hpan.L.route.tip = Longest Trade Route
hpan.one.moment = One moment...
hpan.quit=Quit
hpan.roll=Roll
# Auto-roll countdown timer; see also hpan.trade.auto_reject_countdown
hpan.roll.auto_countdown=Auto-Roll in: {0,number}
hpan.roll.rollorplaycard=Roll or Play Card
hpan.seat.locked = Seat Locked
hpan.sit.here=Sit Here
hpan.sit.lock=Lock
hpan.sit.lock.tip = Lock to prevent a robot from sitting here.
hpan.sit.locked=Locked
hpan.sit.locked.tip = Click to mark or unlock; is locked to prevent a human from taking over this robot.
hpan.sit.locked.tip.nomark = Click to unlock; is locked to prevent a human from taking over this robot.
hpan.sit.locked.norobot=Locked: No robot
hpan.sit.marked=Marked
hpan.sit.marked.tip = Click to unmark; is marked to remove this robot if the game is reset.
hpan.sit.robot=Robot
hpan.sit.takeover=Take Over
hpan.sit.unlock=Unlock
hpan.sit.unlock.tip = Unlock to have a robot sit here when the game starts.
hpan.sit.unlocked=Unlocked
hpan.sit.unlocked.tip = Click to lock or mark; is unlocked, a human can take over this robot.
hpan.sit.unlocked.tip.nomark = Click to lock; is unlocked, a human can take over this robot.
hpan.start.game=Start Game
# Bot trade rejection countdown timer; see also hpan.roll.auto_countdown
hpan.trade.auto_reject_countdown=Auto-Reject in: {0,number}
hpan.trade.bankport=Bank/Port
hpan.trade.bankport.tip=Trade these resources with the bank or a port
hpan.trade.clear=Clear
hpan.trade.iget=I get:
hpan.trade.iget.tip=Resources to get from other players or the bank
hpan.trade.igive=I give:
hpan.trade.igive.tip=Resources to give to other players or the bank
hpan.trade.msg.chooseoppo = Choose at least one opponent's checkbox.
hpan.trade.msg.donthave = You can't offer what you don't have.
hpan.trade.msg.eachplayer = A trade must contain at least one resource from each player.
hpan.trade.msg.notnow = You cannot trade at this time.
hpan.trade.offer=Offer
hpan.trade.offer.tip.first = To offer a trade, first click resources
hpan.trade.offer.tip.send = Send trade offer to other players
hpan.trade.undo=Undo Trade
hpan.trade.undo.tip=Undo the most recent Bank Trade
hpan.winner.label={0} - Winner
hpan.winner.label.ttwithvp=Winner with {0,number} victory points

# TradePanel to show other players' offers; related game announcement text in SOCPlayerInterface
trade.accept = Accept
trade.counter = Counter
trade.counter.to.x = Counter to {0}:
trade.gave.rsrcs.for.from.player={0} gave {1,rsrcs} for {2,rsrcs} from {3}.
trade.give.to.opponent = Give to opponent
trade.gives.you = Gives You:
trade.msg.cant.make.offer = You can't make that offer.
trade.msg.cant.offer.dont_have = You can't offer what you don't have.
trade.msg.must.contain = A trade must contain at least one resource from each player.
trade.offered.rsrcs.for={0} offered to give {1,rsrcs} for {2,rsrcs}.
trade.offered.to = Offered to: {0}
trade.opponent.gives = Opponent gives to you
trade.reject = Reject
trade.they.get = They Get:
# traded with bank or port: {0} = player, {1} = gave, {2} = got, {3} = 1 the bank, 2 a port
trade.traded.rsrcs.for.from.bankport={0} traded {1,rsrcs} for {2,rsrcs} from {3,choice, 1#the bank|2#a port}.
trade.traded.rsrcs.for.from.bankport.undoprevious={0} traded {1,rsrcs} for {2,rsrcs} from {3,choice, 1#the bank|2#a port}. (Undo previous trade)
trade.you.give = You give to opponent

board.city = City: {0}
board.initial.not.here = Initial placement not allowed here
board.most_recent_placement = (Most recent placement)
board.road = Road: {0}
board.robber.not.here = Cannot move the robber here.
board.sc_clvi.village = Village for cloth trade on {0,number} ({1,number} cloth)
board.sc_piri.lone.stlmt = Lone Settlement location allowed on pirate island
board.sc_piri.lone.stlmt.after = Lone Settlement location allowed on pirate island after initial placement
# if {2} is used, its localized text starts with "." to end this sentence, so no space here before {2}
board.sc_piri.piratefortress = Pirate Fortress: {0} must defeat to win{2}
# Extra descriptions for client player's piratefortress {2} placeholder (is "" for other players):
board.sc_piri.pf_extra.attack = . Right-click to attack this fortress.
board.sc_piri.pf_extra.attack.osx = . Control-click to attack this fortress.
board.sc_piri.pf_extra.build = . To attack this fortress, build ships to it.
board.settle.not.here = Not allowed to settle here
board.ship = Ship: {0}
board.stlmt = Settlement: {0}
board.unowned = unowned
board.warship = Warship: {0}

board.msg.canceled.move.ship = Canceled moving the ship.
board.msg.cannot.build.there = Sorry, you cannot build there.
board.msg.click.ship.new.loc = Click the ship's new location.
board.msg.n7.last.round = Last round for "No 7s"
board.msg.n7.rounds.left = {0,number} rounds left for "No 7s"
board.msg.n7c.until_city = No 7s rolled until a city is built
board.msg.special.building = Special Building: {0}

board.popup.hint_build_click = To build pieces, right-click the build location.
board.popup.hint_build_click.osx = To build pieces, hold Control while clicking the build location.

# Board popup menu items
board.build.move.ship = Move Ship
board.build.road = Build Road
board.build.sc_piri.attack.fortress = Attack Fortress
board.build.skip.road.ship = Skip road or ship
board.build.ship = Build Ship
board.build.stlmt = Build Settlement
board.build.upgrade.city = Upgrade to City
board.cancel.build = Cancel build
board.cancel.city.upgrade = Cancel city upgrade
board.cancel.road = Cancel road
board.cancel.ship = Cancel ship
board.cancel.ship.move = Cancel ship move
board.cancel.stlmt = Cancel settlement
board.trade.bank.port.trade = Bank/Port Trade
board.trade.trade.port = Trade Port
board.trade.trade.x.rsrcs = Trade {0,rsrcs}
# Resource "trade 3 ___ for 1 ____"; second part passed to strings.getSpecial as res count + res type, the count is always 1
board.trade.trade.x.rsrcs.for.1.rsrc = Trade {0,rsrcs} for {2,rsrcs}
# Resource trade "for 1 ____"; passed to strings.getSpecial as res count + res type, the count is always 1
board.trade.for.1.rsrc = For {0,rsrcs}
board.undo.move.ship = Undo move ship
board.undo.build.city.upgrade = Undo City upgrade
board.undo.build.road = Undo build Road
board.undo.build.ship = Undo build Ship
board.undo.build.stlmt = Undo build Settlement

# see also resources.clay, .ore, .sheep, wheat, .wood
board.hex.desert = Desert
board.hex.fog.r = Fog (place ships or roads to reveal)
board.hex.fog.s = Fog (place ships or settlements to reveal)
board.hex.generic = Hex type {0}
board.hex.gold = Gold
board.hex.water = Water

board.edge.devcard = Receive Dev card for placing a ship here
board.edge.ship_receive_this = Place a ship here to receive this {0}
board.edge.svp = Receive 1 SVP for placing a ship here

# Board node lists / edge lists: added layout parts "N2", "E1", etc.
# Used in tooltips and also by SOCSpecialItemDialog.
# See also game.specitem.*
# The tooltip check in SOCBoardPanel.handleHover is currently hardcoded to _SC_WOND only;
# if other scenarios use node lists, code there must be generalized.
board.nodelist.no_desc = Special Node type {0,number}
board.nodelist._SC_WOND.N1 = The Wasteland
board.nodelist._SC_WOND.N2 = The Strait
# N3 is same text as board.initial.not.here
board.nodelist._SC_WOND.N3 = Initial placement not allowed here

# Building Panel; a lot of these have trailing spaces, for GUI element spacing
build.1.vp = 1 VP
build.available = available
build.buy = Buy
build.buybuild = Buy/Build
build.city = City:
build.city.vp = 2 VP  (receives 2x rsrc.)
build.cost_to_build = Cost to Build
buy.dev.card = Dev Card:
buy.dev.cards.available = Development cards available to buy
buy.dev.cards.low = Almost out of development cards to buy
buy.dev.cards.none.common = No more development cards available to buy
build.game.options = Options...
build.game.stats = Statistics...
build.road = Road: 
build.road.vp = 0 VP  (longest road = 2 VP)
build.sc_clvi.cloth = Cloth:
build.sc_clvi.cloth.tip = General Supply of cloth for any villages shared by multiple players
build.settlement = Settlement:
build.ship = Ship:
build.ship.vp = 0 VP  (longest route = 2 VP)
build.special.build = Special Building
build.special.build.phase = Special Building Phase
build.special.build.tip = This phase allows building between player turns.
build.specitem._SC_WOND = Wonders...
build.specitem._SC_WOND.tip = Build or get info about the Wonders
build.vp.to.win = VP to win:
build.vp.to.win.tip = Victory Points total needed to win the game
# this PLP reminder message is used at server and client
action.build.cannot.special.PLP.common = House rule: Special Building phase requires 5 or 6 players.
action.sbp.turn.to.place.common = Special building phase: {0}''s turn to place.

game.hex.addinfo.robber=ROBBER
game.hex.addinfo.past.robber=robber was here
game.hex.addinfo.pirate=PIRATE SHIP
game.hex.addinfo.past.pirate=pirate was here
game.hex.addinfo.cantsettle=cannot settle here

game.hex.hoverformat = {0}
game.hex.hoverformat.dice = {0}: {1}
game.hex.hoverformat.addi = {0} ({2})
game.hex.hoverformat.dice.addi = {0}: {1} ({2})

# This section (game.invitem.unknown - game.aport.generic) is needed at both client and server
# for SOCInventoryItem / SOCStringManager.
game.invitem.unknown = Unknown item
game.aninvitem.unknown = An unknown item
game.port.three = 3:1 Port
game.port.clay = 2:1 Clay port
game.port.ore = 2:1 Ore port
game.port.sheep = 2:1 Sheep port
game.port.wheat = 2:1 Wheat port
game.port.wood = 2:1 Wood port
# Fallback just in case, {1}: ID
game.port.generic = Port type {0}
game.aport = a port
game.aport.three = a 3:1 port
game.aport.clay = a 2:1 clay port
game.aport.ore = a 2:1 ore port
game.aport.sheep = a 2:1 sheep port
game.aport.wheat = a 2:1 wheat port
game.aport.wood = a 2:1 wood port
game.aport.generic = a port of type {0}

#{0: player}
game.port.three.stlmt=3:1 Port: {0}
game.port.clay.stlmt=2:1 Clay port: {0}
game.port.ore.stlmt=2:1 Ore port: {0}
game.port.sheep.stlmt=2:1 Sheep port: {0}
game.port.wheat.stlmt=2:1 Wheat port: {0}
game.port.wood.stlmt=2:1 Wood port: {0}
game.port.generic.stlmt=Port type {1}: {0}

game.port.three.city=3:1 Port city: {0}
game.port.clay.city=2:1 Clay port city: {0}
game.port.ore.city=2:1 Ore port city: {0}
game.port.sheep.city=2:1 Sheep port city: {0}
game.port.wheat.city=2:1 Wheat port city: {0}
game.port.wood.city=2:1 Wood port city: {0}
game.port.generic.city=Port type {1} city: {0}

game.trade.stats.bank = 4:1 Bank
game.trade.stats.heading = Your trade stats:
game.trade.stats.heading_short = Trade stats:
game.trade.stats.heading_give_get = Give (clay, ore, sheep, wheat, wood) -> Get (clay, ore, sheep, wheat, wood):
game.trade.stats.with_players = All trades with players

action.discarded.rsrcs={0} discarded {1,rsrcs}.
action.discarded.rsrcs.you=You discarded {1,rsrcs}.
action.discarded.total.common={0} discarded {1,number} resources.

# discovery/year of plenty/Gold Hex picks; these strings are at client and server
action.card.discov.received={0} received {1,rsrcs} from the bank.
action.picked.rsrcs={0} has picked {1,rsrcs}.
action.picked.rsrcs.goldhex={0} has picked {1,rsrcs} from the gold hex.

# monopoly; see also server strings action.mono.took.your.1, action.mono.took.your.n
game.action.mono.monopolized={0} monopolized {1,rsrcs}.
game.action.mono.you.monopolized=You monopolized {0,rsrcs}.

game.devcard.bought={0} bought a development card.
game.devcard.bought.xleft=There are {0,number} cards left.
game.devcard.bought.1left=There is 1 card left.
game.devcard.bought.0left=There are no more Development cards.

# 0 = player name, 1 = localized port type ("a 3:1 port", "a 2:1 clay port", etc) from game.aport.*
game.invitem.port.picked.up = {0} has picked up {1} from the board.
game.invitem.port.placed = {0} has placed {1}.
game.invitem.sc_ftri.need.coastal = Requires a coastal settlement not adjacent to an existing port.
game.invitem.sc_ftri.pickup.ask.immed = If you place a ship here, this port must be placed now at your coastal settlement or city.
game.invitem.sc_ftri.pickup.ask.later = If you place a ship here, you will be given this port to be placed later at your coastal settlement or city.
game.invitem.sc_ftri.prompt = You have received this trade port as a gift.  You must now place it next to your coastal settlement which is not adjacent to any existing port.

# for SOCPlayerInterface.updateLongestLargest
game.route.longest.taken=Longest trade route was taken from {0} by {1}.
game.route.longest.first=Longest trade route was taken by {0}.
game.route.longest.lost = Longest trade route was lost by {0}.
game.road.longest.taken=Longest road was taken from {0} by {1}.
game.road.longest.first=Longest road was taken by {0}.
game.road.longest.lost = Longest road was lost by {0}.
game.army.largest.taken=Largest army was taken from {0} by {1}.
game.army.largest.first=Largest army was taken by {0}.
game.army.largest.lost = Largest army was lost by {0}.

game.pieces.moved.ship={0} moved a ship.

game.playername.gets.resources.common={0} gets {1,rsrcs}.

game.roll.rolled.number=* Rolled a {0,number}.

# Special Items; see also specitem.* and board.nodelist.*
game.specitem.sc_wond.built = {0} has built level {1,number} of their Wonder ({2}).
game.specitem.sc_wond.decl = You cannot build that Wonder right now.
game.specitem.sc_wond.of_fallback = of a Wonder
game.specitem.sc_wond.of_w1 = of the Theater
game.specitem.sc_wond.of_w2 = of the Great Bridge
game.specitem.sc_wond.of_w3 = of the Monument
game.specitem.sc_wond.of_w4 = of the Great Wall
game.specitem.sc_wond.of_w5 = of the Cathedral
game.specitem.sc_wond.started = {0} started building a Wonder! ({1})
game.specitem.sc_wond.w1 = Theater
game.specitem.sc_wond.w2 = Great Bridge
game.specitem.sc_wond.w3 = Monument
game.specitem.sc_wond.w4 = Great Wall
game.specitem.sc_wond.w5 = Cathedral

game.sbp.wants.to={0} wants to Special Build.

reply.common.cannot.at_that_location = You can't do that at that location.
reply.common.cannot.in_this_game = You can't do that in this game.
reply.common.cannot.right_now = You can't do that right now.
reply.common.trade.cannot_make = You can't make that trade.

# SOCSpecialItemDialog, requirements, and related texts; see also game.specitem.*
specitem.req.c = {0,choice, 1#1 City|1<{0,number} Cities}
specitem.req.c.at = {0,choice, 1#1 City|1<{0,number} Cities} at {1}
specitem.req.s = {0,choice, 1#1 Settlement|1<{0,number} Settlements}
specitem.req.s.at = {0,choice, 1#1 Settlement|1<{0,number} Settlements} at {1}
specitem.req.rl = Route length {0,number} or more
specitem.req.vp = {0,number} or more Victory Points
dialog.specitem.cost = Cost:
dialog.specitem.start_game = Must start the game to see this info.
dialog.specitem._SC_WOND.builder = Builder: {0}
dialog.specitem._SC_WOND.current_level = Current Level: {0,number} of {1,number}
dialog.specitem._SC_WOND.prompt = Choose the Wonder you will build.
dialog.specitem._SC_WOND.requires = Requires:
dialog.specitem._SC_WOND.starting_cost = Starting cost: Resources shown, and 1 ship used for ownership marker
dialog.specitem._SC_WOND.subtitle = The Wonders and their Builders:
dialog.specitem._SC_WOND.title = Wonders
dialog.specitem._SC_WOND.wonder = Wonder:

# SOCPlayerInterface:

menu.copy = Copy
menu.select_all = Select All

# Bot debugging
interface.debug.bot.clm-city = :consider-move(city)
interface.debug.bot.clm-road = :consider-move(road)
interface.debug.bot.clm-set = :consider-move(settlement)
interface.debug.bot.clm-ship = :consider-move(ship)
interface.debug.bot.clt-city = :consider-target(city)
interface.debug.bot.clt-road = :consider-target(road)
interface.debug.bot.clt-set = :consider-target(settlement)
interface.debug.bot.clt-ship = :consider-target(ship)
# Bot debugging mode prompt: {1} is bot player name, {0} is from interface.debug.bot.clm-* or interface.debug.bot.clt-*
interface.debug.bot.mode_prompt = {0} mode for {1}: Click to indicate piece location.
interface.debug.bot.not_found = Can''t find a player named {0}

# Other SOCPlayerInterface strings:
interface.error.game.has_been_deleted = Game has been deleted.
interface.error.game.stopped = Game stopped.
interface.error.lost.conn = Lost connection to the server.
interface.max.players = Maximum players: {0,number}
#{0} one person or a list of people
interface.member.joined.game={0} has joined this game.
interface.member.left.game={0} left the game.
interface.observer.enter.one={0} has joined as observer.
interface.observer.enter.many={0,list} have joined as observers.
interface.seats.avail = {0,choice, 0#No seats|1#1 seat|1<{0,number} seats} available
interface.title.game = Settlers of Catan Game: {0}
interface.title.game.over = Settlers of Catan Game Over: {0}
interface.type.here.chat = Type here to chat.
interface.chat.text.no_pipe_symbol = Chat text can't contain the '|' symbol.

game.prompt.turn_to_roll_dice = It''s {0}''s turn to roll the dice.

#{0} player, {1} number, {2} description
game.SVP.get.one={0} gets {1,number} Special Victory Point for {2}.
game.SVP.get.many={0} gets {1,number} Special Victory Points for {2}.

game.end.player.has.vpcards = {0} has {1,dcards}.
game.end.player.vpcards = Victory Point cards:

# Scenario _SC_PIRI: Attack the pirate fortress
game.sc_piri.attfort.and.endturn = Attack and end turn?
game.sc_piri.attfort.attacked = {0} has attacked a Pirate Fortress (defense strength {1,number}).
game.sc_piri.attfort.cannot = You cannot attack the fortress right now.
game.sc_piri.attfort.confirm = Confirm Attack
game.sc_piri.attfort.confirm.endturn = Attacking the fortress will end your turn. Are you sure?
game.sc_piri.attfort.def.strength = Defense strength: {0,number}
game.sc_piri.attfort.loses = {0} loses, and loses 2 ships.
game.sc_piri.attfort.n.more.attacks = That Fortress will be defeated after winning {0,choice, 1#1 more attack|1<{0,number} more attacks}.
game.sc_piri.attfort.results = Pirate Fortress attack results:
game.sc_piri.attfort.ties = {0} ties, and loses 1 ship.
game.sc_piri.attfort.wins = {0} wins the battle!
game.sc_piri.attfort.wins.recaptured = {0} has recaptured a Fortress as a settlement.

# SC_PIRI pirate fleet attacks; should have the same text in client and server properties files
action.rolled.sc_piri.player.lost.rsrcs.to.fleet={0} lost {1,choice, 1#1 resource|1<{1,number} resources} to pirate fleet attack (strength {2,number}).
action.rolled.sc_piri.player.tied={0} tied against the pirate fleet (strength {1,number}).
action.rolled.sc_piri.player.won.pick.free={0} won against the pirate fleet (strength {1,number}) and will pick a free resource.
action.rolled.sc_piri.you.lost.rsrcs.to.fleet=You lost {0,rsrcs} to the pirate fleet (strength {1,number}).

# robber.common.* are used at the client and server,
# and should have the same text in client and server properties files.
robber.common.stole.cloth.from={0} stole a cloth from {1}.
robber.common.stole.resource.from={0} stole a resource from {1}.
robber.common.stole.resource.from.n={0} stole {2,number} resources from {1}.
robber.common.stole.resource.from.you={0} stole {1,rsrcs} from you.
robber.common.you.stole.resource.from=You stole {0,rsrcs} from {2}.
# if game is Fully Observable, client reports stolen resource details
robber.stole.resource.from.play_fo={0} stole {2,rsrcs} from {1}.

options.error.valuesproblem=Cannot create game {0}\nThere is a problem with the option values chosen.\n{1}{2}
options.error.valuesproblem.which=This option must be changed: {0}

dialog.base.continue.playing = Continue playing
dialog.base.move.pirate = Move Pirate
dialog.base.move.robber = Move Robber
dialog.base.place.dont = Don't Place Here
dialog.base.place.ship = Place Ship
dialog.base.place.ship.title = Place Ship Here?
dialog.choosemove.ask.rob.pirate = Do you want to move the robber or the pirate ship?
dialog.choosemove.robber.or.pirate = Move robber or pirate?
dialog.discard.discard = Discard
dialog.discard.gain.this = Gain this:
dialog.discard.gain.this.plural = Gain these:
dialog.discard.pick = Pick
dialog.discard.please.discard.n = Please discard {0,choice, 1#1 resource|1<{0,number} resources}.
dialog.discard.please.pick.n = Please pick {0,choice, 1#1 resource|1<{0,number} resources}.
dialog.discard.this = Discard this:
dialog.discard.this.plural = Discard these:
dialog.discard.title = Discard [{0}]
dialog.discard.title.gain = Gain Resources [{0}]
dialog.discard.you.have = You have:
dialog.mono.please.pick.resource=Please pick a resource to monopolize.
dialog.moverobber.are.you.sure = Are you sure you want to move the robber to your own hex?
dialog.moverobber.are.you.sure.pirate = Are you sure you want to move the pirate to your own hex?
dialog.moverobber.dont = Don't move there
dialog.moverobber.to.hex = Move robber to your hex?
dialog.moverobber.to.hex.pirate = Move pirate to your hex?
dialog.practiceask.already.being.played = A practice game is already being played.
dialog.practiceask.create = Create another
dialog.practiceask.in.progress = Practice game in progress
dialog.practiceask.show.game = Show that game
dialog.quit.being.played = Do you want to quit the game being played?
dialog.quit.dont = Don't quit
dialog.quit.finished = Do you want to quit this finished game?
dialog.quit.really = Really quit game {0}?
dialog.quit.reset.board = Reset board
dialog.quit.this = Quit this game
dialog.quitall.cont.play = Continue playing
dialog.quitall.cont.srv = Continue serving
dialog.quitall.games = Quit all games
dialog.quitall.really = Really quit all games?
dialog.quitall.shut.anyway = Shut down server anyway
dialog.quitall.shut.srv = Shut down game server?
dialog.quitall.still.active = One or more games are still active.
dialog.rob.sc_clvi.ask.cloth.or.rsrc = Do you want to steal cloth or a resource from this player?
dialog.rob.sc_clvi.cloth = Steal Cloth
dialog.rob.sc_clvi.cloth.or.rsrc = Rob cloth or resource?
dialog.rob.sc_clvi.rsrc = Steal Resource
dialog.robchoose.choose.player = Choose Player
dialog.robchoose.choose.steal.no.player = Choose this to steal from no player
dialog.robchoose.decline = (decline)
dialog.robchoose.n.res.n.vp = {0,number} res, {1,number} VP
dialog.robchoose.player.has.n.rsrcs = This player has {0,choice, 0#no resources|1#1 resource|1<{0,number} resources}.
dialog.robchoose.please.choose = Please choose a player to steal from:
# GameStatisticsFrame
dialog.stats.current_round = Current round:
# All button to show all players' rolls
dialog.stats.dice_rolls.all = All
dialog.stats.dice_rolls.title = Dice Rolls
dialog.stats.dice_rolls.ttip_roll = Roll: {0}<br/>
# dialog also uses stats.gold_gains.title
dialog.stats.other_stats.title = Other Stats
dialog.stats.your_player.title = Your Player
dialog.stats.title = Game Statistics

reset.board = Reset Board?
reset.board.for.game = Reset board for game {0}?
reset.board.new = Reset the board and start a new game?
reset.board.was.reset = The board was reset by {0}.
reset.go.ahead = Go ahead.
reset.new.game.started = New game started by {0}.
reset.player.who.left = player who left
reset.reset = Reset
reset.restart.game = Restart game?
reset.server.support.too.old = This server does not support board reset, server is too old.
reset.voting.already.active = Voting is already active. Try again when voting completes.
reset.was.rejected = The board reset was rejected.
# {0} player, {1} "No thanks." or "Go ahead."
reset.x.has.voted = {0} has voted: {1}
reset.x.wants.reset = {0} wants to reset the game being played.
reset.x.wants.start.new = {0} wants to start a new game.
reset.you.may.ask.once = You may ask only once per turn to reset the board.

stats.gold_gains = Resources gained from gold hexes: {0,number}
stats.gold_gains.title = From gold hexes:
stats.rolls.resource_rolls = Resource Rolls:
stats.rolls.your = Your resource rolls: (Clay, Ore, Sheep, Wheat, Wood)
stats.rolls.n.total = {0,number}, {1,number}, {2,number}, {3,number}, {4,number}. Total: {5,number}
